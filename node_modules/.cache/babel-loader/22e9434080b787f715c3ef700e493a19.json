{"ast":null,"code":"var _jsxFileName = \"/Volumes/mac f/project planner/src/components/Todo/TodoApp.js\";\nimport React, { Component } from 'react';\nimport TodoCard from './TodoCard';\nimport uuid from 'uuid';\nexport class TodoApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: uuid.v4(),\n        title: 'project name & types',\n        discription: 'asd',\n        completed: false\n      }, {\n        id: uuid.v4(),\n        title: 'planning',\n        discription: 'acf',\n        completed: false\n      }, {\n        id: uuid.v4(),\n        title: 'start cooding',\n        discription: 'la',\n        completed: false\n      }] // Toggle Complete\n\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = (title, discription) => {\n      const newTodo = {\n        id: uuid.v4(),\n        title,\n        discription,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(TodoCard, {\n      todos: this.state.todos,\n      markComplete: this.markComplete,\n      delTodo: this.delTodo,\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\nexport default TodoApp;","map":{"version":3,"sources":["/Volumes/mac f/project planner/src/components/Todo/TodoApp.js"],"names":["React","Component","TodoCard","uuid","TodoApp","state","todos","id","v4","title","discription","completed","markComplete","setState","map","todo","delTodo","filter","addTodo","newTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SACnCI,KADmC,GAC3B;AACJC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,EAAE,EAAEJ,IAAI,CAACK,EAAL,EADA;AAEJC,QAAAA,KAAK,EAAE,sBAFH;AAGJC,QAAAA,WAAW,EAAE,KAHT;AAIJC,QAAAA,SAAS,EAAE;AAJP,OAAD,EAMP;AACIJ,QAAAA,EAAE,EAAEJ,IAAI,CAACK,EAAL,EADR;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIC,QAAAA,SAAS,EAAE;AAJf,OANO,EAYP;AACIJ,QAAAA,EAAE,EAAEJ,IAAI,CAACK,EAAL,EADR;AAEIC,QAAAA,KAAK,EAAE,eAFX;AAGIC,QAAAA,WAAW,EAAE,IAHjB;AAIIC,QAAAA,SAAS,EAAE;AAJf,OAZO,CADH,CAqBZ;;AArBY,KAD2B;;AAAA,SAuBvCC,YAvBuC,GAuBvBL,EAAD,IAAQ;AACnB,WAAKM,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBC,IAAI,IAAI;AAChD,cAAGA,IAAI,CAACR,EAAL,KAAYA,EAAf,EAAmB;AACfQ,YAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACH;;AACD,iBAAOI,IAAP;AACH,SALsB;AAAT,OAAd;AAMH,KA9BsC;;AAAA,SAiCvCC,OAjCuC,GAiC5BT,EAAD,IAAQ;AACd,WAAKM,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,MAAjB,CAAwBF,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAA5C,CAAJ;AAAT,OAAd;AACH,KAnCsC;;AAAA,SAsCvCW,OAtCuC,GAsC7B,CAACT,KAAD,EAAQC,WAAR,KAAwB;AAC9B,YAAMS,OAAO,GAAG;AACZZ,QAAAA,EAAE,EAAEJ,IAAI,CAACK,EAAL,EADQ;AAEZC,QAAAA,KAFY;AAGZC,QAAAA,WAHY;AAIZC,QAAAA,SAAS,EAAE;AAJC,OAAhB;AAMA,WAAKE,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBa,OAAtB;AAAT,OAAd;AACH,KA9CsC;AAAA;;AA+CnCC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAA5B;AAAmC,MAAA,YAAY,EAAE,KAAKM,YAAtD;AAAoE,MAAA,OAAO,EAAE,KAAKI,OAAlF;AAA2F,MAAA,OAAO,EAAE,KAAKE,OAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAnDkC;AAsDvC,eAAed,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoCard from './TodoCard';\nimport uuid from 'uuid';\nexport class TodoApp extends Component {\n    state = {\n        todos: [{\n            id: uuid.v4(),\n            title: 'project name & types',\n            discription: 'asd',\n            completed: false\n        },\n        {\n            id: uuid.v4(),\n            title: 'planning',\n            discription: 'acf',\n            completed: false\n        },\n        {\n            id: uuid.v4(),\n            title: 'start cooding',\n            discription: 'la',\n            completed: false\n        }]\n    }\n\n// Toggle Complete\nmarkComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n        if(todo.id === id) {\n            todo.completed = !todo.completed\n        }\n        return todo\n    }) });\n}\n\n// Delete Todo\ndelTodo = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n}\n\n// Add Todo\naddTodo = (title, discription) => {\n    const newTodo = {\n        id: uuid.v4(),\n        title,\n        discription,\n        completed: false\n    }\n    this.setState({ todos: [...this.state.todos, newTodo ]});\n}\n    render() {\n        return (\n            <TodoCard todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} addTodo={this.addTodo}/>\n        )\n    }\n}\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}